name: Containerize
on:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string
      repository_name:
        required: true
        type: string
    secrets:
      docker_username:
        required: true
      docker_password:
        required: true
    outputs:
      image_digest:
        description: "The container image's digest"
        value: ${{ jobs.containerize.outputs.IMAGE_DIGEST }}
jobs:
  containerize:
    runs-on: ubuntu-latest
    outputs:
      image_digest: ${{ steps.image-digest.outputs.IMAGE_DIGEST }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build the image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: |
            docker.io/${{ secrets.docker_username }}/${{ inputs.repository_name }}:${{ inputs.image_tag }}

      - name: Retrieve image digest
        id: image-digest
        run: |
          docker pull "docker.io/${{ secrets.docker_username }}/${{ inputs.repository_name }}:${{ inputs.image_tag }}"
          IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' "${{ secrets.docker_username }}/${{ inputs.repository_name }}:${{ inputs.image_tag }}" | cut -d '@' -f 2)
          echo "Image Digest is ${IMAGE_DIGEST}"
          echo "IMAGE_DIGEST=${IMAGE_DIGEST}" >> $GITHUB_OUTPUT
